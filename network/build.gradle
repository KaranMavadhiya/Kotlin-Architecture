apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

ext.retrofit_okhttp_version = '2.9.0'
ext.okhttp_logging_interceptor = '4.7.2'
ext.moshi_converter = '1.9.3'

ext.annotation_version = '1.1.0'

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Retrofit & OkHttp with Moshi Converter
    api "com.squareup.retrofit2:converter-moshi:$retrofit_okhttp_version"
    api "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_interceptor"

    // Moshi with Adapter and Kotlin Codegen
    api "com.squareup.moshi:moshi-kotlin:$moshi_converter"
    api "com.squareup.moshi:moshi-adapters:$moshi_converter"
    kapt("com.squareup.moshi:moshi-kotlin-codegen:$moshi_converter")

    // Annotation
    api "androidx.annotation:annotation:$annotation_version"
}